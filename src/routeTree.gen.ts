/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as GlobalStylesImport } from './routes/globalStyles'
import { Route as LokaleOversigtImport } from './routes/LokaleOversigt'
import { Route as LoginImport } from './routes/Login'
import { Route as BookingSuccessImport } from './routes/BookingSuccess'
import { Route as BookingConfirmationImport } from './routes/BookingConfirmation'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const GlobalStylesRoute = GlobalStylesImport.update({
  id: '/globalStyles',
  path: '/globalStyles',
  getParentRoute: () => rootRoute,
} as any)

const LokaleOversigtRoute = LokaleOversigtImport.update({
  id: '/LokaleOversigt',
  path: '/LokaleOversigt',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/Login',
  path: '/Login',
  getParentRoute: () => rootRoute,
} as any)

const BookingSuccessRoute = BookingSuccessImport.update({
  id: '/BookingSuccess',
  path: '/BookingSuccess',
  getParentRoute: () => rootRoute,
} as any)

const BookingConfirmationRoute = BookingConfirmationImport.update({
  id: '/BookingConfirmation',
  path: '/BookingConfirmation',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/BookingConfirmation': {
      id: '/BookingConfirmation'
      path: '/BookingConfirmation'
      fullPath: '/BookingConfirmation'
      preLoaderRoute: typeof BookingConfirmationImport
      parentRoute: typeof rootRoute
    }
    '/BookingSuccess': {
      id: '/BookingSuccess'
      path: '/BookingSuccess'
      fullPath: '/BookingSuccess'
      preLoaderRoute: typeof BookingSuccessImport
      parentRoute: typeof rootRoute
    }
    '/Login': {
      id: '/Login'
      path: '/Login'
      fullPath: '/Login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/LokaleOversigt': {
      id: '/LokaleOversigt'
      path: '/LokaleOversigt'
      fullPath: '/LokaleOversigt'
      preLoaderRoute: typeof LokaleOversigtImport
      parentRoute: typeof rootRoute
    }
    '/globalStyles': {
      id: '/globalStyles'
      path: '/globalStyles'
      fullPath: '/globalStyles'
      preLoaderRoute: typeof GlobalStylesImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/BookingConfirmation': typeof BookingConfirmationRoute
  '/BookingSuccess': typeof BookingSuccessRoute
  '/Login': typeof LoginRoute
  '/LokaleOversigt': typeof LokaleOversigtRoute
  '/globalStyles': typeof GlobalStylesRoute
  '/about': typeof AboutLazyRoute
}

export interface FileRoutesByTo {
  '/BookingConfirmation': typeof BookingConfirmationRoute
  '/BookingSuccess': typeof BookingSuccessRoute
  '/Login': typeof LoginRoute
  '/LokaleOversigt': typeof LokaleOversigtRoute
  '/globalStyles': typeof GlobalStylesRoute
  '/about': typeof AboutLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/BookingConfirmation': typeof BookingConfirmationRoute
  '/BookingSuccess': typeof BookingSuccessRoute
  '/Login': typeof LoginRoute
  '/LokaleOversigt': typeof LokaleOversigtRoute
  '/globalStyles': typeof GlobalStylesRoute
  '/about': typeof AboutLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/BookingConfirmation'
    | '/BookingSuccess'
    | '/Login'
    | '/LokaleOversigt'
    | '/globalStyles'
    | '/about'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/BookingConfirmation'
    | '/BookingSuccess'
    | '/Login'
    | '/LokaleOversigt'
    | '/globalStyles'
    | '/about'
  id:
    | '__root__'
    | '/BookingConfirmation'
    | '/BookingSuccess'
    | '/Login'
    | '/LokaleOversigt'
    | '/globalStyles'
    | '/about'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  BookingConfirmationRoute: typeof BookingConfirmationRoute
  BookingSuccessRoute: typeof BookingSuccessRoute
  LoginRoute: typeof LoginRoute
  LokaleOversigtRoute: typeof LokaleOversigtRoute
  GlobalStylesRoute: typeof GlobalStylesRoute
  AboutLazyRoute: typeof AboutLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  BookingConfirmationRoute: BookingConfirmationRoute,
  BookingSuccessRoute: BookingSuccessRoute,
  LoginRoute: LoginRoute,
  LokaleOversigtRoute: LokaleOversigtRoute,
  GlobalStylesRoute: GlobalStylesRoute,
  AboutLazyRoute: AboutLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/BookingConfirmation",
        "/BookingSuccess",
        "/Login",
        "/LokaleOversigt",
        "/globalStyles",
        "/about"
      ]
    },
    "/BookingConfirmation": {
      "filePath": "BookingConfirmation.tsx"
    },
    "/BookingSuccess": {
      "filePath": "BookingSuccess.tsx"
    },
    "/Login": {
      "filePath": "Login.tsx"
    },
    "/LokaleOversigt": {
      "filePath": "LokaleOversigt.tsx"
    },
    "/globalStyles": {
      "filePath": "globalStyles.tsx"
    },
    "/about": {
      "filePath": "about.lazy.jsx"
    }
  }
}
ROUTE_MANIFEST_END */
